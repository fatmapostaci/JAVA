package j100projects.project05;# E-Ticaret UygulamasÄ± SimÃ¼lasyonu

## Proje AÃ§Ä±klamasÄ±
Bu proje, Java programlama dilinin temel Ã¶zelliklerini uygulamalÄ± olarak Ã¶ÄŸrenmek iÃ§in tasarlanmÄ±ÅŸtÄ±r. ÃœÃ§ kiÅŸilik gruplar, bir e-ticaret uygulamasÄ± simÃ¼lasyonu geliÅŸtirecek. Proje; OOP kavramlarÄ±, enum, exception handling ve collections gibi temel konularÄ± iÃ§ermektedir.

---

## Proje AdÄ±mlarÄ±

### 1. Oturum (40 Dakika) - Proje Planlama ve Temel YapÄ±nÄ±n OluÅŸturulmasÄ±

**AmaÃ§:**
SÄ±nÄ±flarÄ±n tasarlanmasÄ±, gÃ¶rev daÄŸÄ±lÄ±mÄ± ve temel iskeletin oluÅŸturulmasÄ±.

#### GÃ¶revler:
- **KiÅŸi 1 (Sistem TasarÄ±mcÄ±sÄ±):**
  - Ana sÄ±nÄ±flarÄ± ve iliÅŸkilerini belirler (`Urun`, `Musteri`, `Siparis`).
  - UML veya basit bir diyagram Ã§izer.
  - SÄ±nÄ±f yapÄ±larÄ±nÄ±n iskelet kodlarÄ±nÄ± oluÅŸturur.

- **KiÅŸi 2 (Enum ve Sabitler UzmanÄ±):**
  - Projede kullanÄ±lacak sabitleri ve enumlarÄ± belirler (Ã¶r. `Kategori` ve `Durum`).
  - Bu enum Readme sabitler iÃ§in dosyalar oluÅŸturur.

- **KiÅŸi 3 (Veri YapÄ±larÄ± UzmanÄ±):**
  - KullanÄ±lacak koleksiyonlarÄ± belirler (Ã¶r. `ArrayList`, `HashMap`).
  - ÃœrÃ¼n ve mÃ¼ÅŸteri listeleri iÃ§in baÅŸlangÄ±Ã§ koleksiyonlarÄ±nÄ± oluÅŸturur.

#### YapÄ±lacaklar:
- **Ana sÄ±nÄ±flar:**
  - `Urun`: ID, isim, fiyat, kategori (enum), stok miktarÄ±.
  - `Musteri`: ID, isim, e-posta, alÄ±ÅŸveriÅŸ sepeti.
  - `Siparis`: SipariÅŸ detaylarÄ± (mÃ¼ÅŸteri, Ã¼rÃ¼n listesi, toplam fiyat).

- **Enumlar ve sabitler:**
  - `Kategori`, `Durum` (ÃœrÃ¼n durumu).

- **Koleksiyonlar:**
  - ÃœrÃ¼n listesi (`ArrayList<Urun>`).
  - MÃ¼ÅŸteri listesi (`ArrayList<Musteri>`).

---

### 2. Oturum (40 Dakika) - Ä°ÅŸlevselliklerin Eklenmesi

**AmaÃ§:**
SÄ±nÄ±flara metotlarÄ±n eklenmesi ve temel iÅŸ mantÄ±klarÄ±nÄ±n oluÅŸturulmasÄ±.

#### GÃ¶revler:
- **KiÅŸi 1 (Sistem TasarÄ±mcÄ±sÄ±):**
  - `Urun` sÄ±nÄ±fÄ±na metot ekler:
    - `public void stokAzalt(int miktar)`.
    - `public boolean stokKontrol()`.
  - `Musteri` sÄ±nÄ±fÄ±na metot ekler:
    - `public void sepeteEkle(Urun urun)`.
    - `public void sepetiGoster()`.

- **KiÅŸi 2 (Enum ve Sabitler UzmanÄ±):**
  - Enum Ã¼zerinden kullanÄ±cÄ±dan giriÅŸ almayÄ± kolaylaÅŸtÄ±racak bir `EnumHelper` sÄ±nÄ±fÄ± oluÅŸturur.
  - Enum deÄŸerlerine Ã¶zel metotlar ekler (Ã¶r. kategori adÄ± dÃ¶ndÃ¼rme).

- **KiÅŸi 3 (Veri YapÄ±larÄ± UzmanÄ±):**
  - ÃœrÃ¼nleri listeleyen metot:
    - `public void urunleriListele()`.
  - MÃ¼ÅŸteri listesinden mÃ¼ÅŸteri bulma metodu:
    - `public Musteri musteriBul(String isim)`.

#### Ã–nerilen Ä°ÅŸlevsellik:
- ÃœrÃ¼nleri listeleme.
- Sepete Ã¼rÃ¼n ekleme.
- Sepetteki Ã¼rÃ¼nleri gÃ¶rÃ¼ntÃ¼leme.

---

### 3. Oturum (40 Dakika) - Hata YÃ¶netimi ve Tamamlama

**AmaÃ§:**
Exception handling, testler ve projenin sonlandÄ±rÄ±lmasÄ±.

#### GÃ¶revler:
- **KiÅŸi 1 (Sistem TasarÄ±mcÄ±sÄ±):**
  - ÃœrÃ¼n ekleme sÄ±rasÄ±nda stok kontrolÃ¼ ekler:
    - `throw new StokYetersizException("Yeterli stok yok.");`
  - AlÄ±ÅŸveriÅŸ sepetinden Ã¼rÃ¼n Ã§Ä±karma metodu ekler.

- **KiÅŸi 2 (Enum ve Sabitler UzmanÄ±):**
  - HatalarÄ± anlamlÄ± kÄ±lmak iÃ§in exception sÄ±nÄ±flarÄ± oluÅŸturur:
    - `StokYetersizException`.
    - `KategoriBulunamadiException`.
  - Enumlar ile uyumlu hata mesajlarÄ± tasarlar.

- **KiÅŸi 3 (Veri YapÄ±larÄ± UzmanÄ±):**
  - UygulamanÄ±n giriÅŸ noktasÄ±nÄ± (`main` metodu) yazar:
    - MÃ¼ÅŸteri oluÅŸturma.
    - ÃœrÃ¼n ekleme.
    - Basit alÄ±ÅŸveriÅŸ akÄ±ÅŸÄ±.
  - TÃ¼m sÄ±nÄ±flarÄ±n uyumlu Ã§alÄ±ÅŸtÄ±ÄŸÄ±nÄ± kontrol eder.

#### Test SenaryolarÄ±:
- KullanÄ±cÄ± hatalÄ± bir kategori seÃ§tiÄŸinde doÄŸru hata mesajÄ± alÄ±yor mu?
- Sepette Ã¼rÃ¼n yoksa uygun mesaj gÃ¶steriliyor mu?
- Stok yetersiz olduÄŸunda exception fÄ±rlatÄ±lÄ±yor mu?

---



---

## Notlar
- Kodlar temiz ve okunabilir olmalÄ±dÄ±r.
- Her oturum sonunda grup ilerlemeyi kontrol etmeli ve eksiklikleri tamamlamalÄ±dÄ±r.
- Yorum satÄ±rlarÄ±yla kod aÃ§Ä±klamalarÄ± yapÄ±lmalÄ±dÄ±r.

Bu proje, Java diline hakimiyetinizi artÄ±rmak ve ekip Ã§alÄ±ÅŸmasÄ± yeteneÄŸinizi geliÅŸtirmek iÃ§in mÃ¼kemmel bir fÄ±rsattÄ±r. Ä°yi Ã§alÄ±ÅŸmalar! ğŸ˜Š
